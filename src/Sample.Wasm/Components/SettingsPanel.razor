<!-- Settings Overlay -->
@if (ShowSettings)
{
    <div class="settings-overlay" @onclick="OnCloseSettings">
        <div class="settings-panel" @onclick:stopPropagation="true">
            <div class="settings-header">
                <h5>설정</h5>
                <button type="button" class="btn-close" @onclick="OnCloseSettings">&times;</button>
            </div>
            <div class="settings-body">
                <div class="mb-3">
                    <label class="form-label">System Message</label>
                    <textarea class="form-control" rows="3" placeholder="시스템 메시지를 입력하세요..." @bind="SystemMessage"></textarea>
                    <div class="form-text">AI의 역할과 행동을 정의합니다</div>
                </div>

                <div class="mb-3">
                    <label class="form-label">최대 토큰</label>
                    <input type="number" class="form-control" min="1" step="1" @bind="MaxTokens" />
                    <div class="form-text">비워두면 모델 기본값 사용</div>
                </div>

                <div class="mb-3">
                    <label class="form-label">기본 모델</label>
                    <input class="form-control" placeholder="예: gpt-4o-mini" @bind=DefaultModel />
                    <div class="form-text">목록 로드 실패 시 사용할 기본 모델</div>
                </div>

                <div class="d-flex gap-2 align-items-center flex-wrap">
                    <button class="btn btn-primary" @onclick="OnSaveDefaults">기본값 저장</button>
                    <button class="btn btn-outline-primary" @onclick="OnTestConnection">연결 테스트</button>
                    <button class="btn btn-outline-info" @onclick="OnTestIndexedDB">IndexedDB 테스트</button>
                    <button class="btn btn-outline-danger btn-sm" @onclick="OnClearIndexedDB">DB 초기화</button>
                    @if (!string.IsNullOrEmpty(SaveStatus))
                    {
                        <span class="text-success">@SaveStatus</span>
                    }
                    @if (!string.IsNullOrEmpty(ConnectionStatus))
                    {
                        <span class="@(ConnectionOk ? "text-success" : "text-danger")">@ConnectionStatus</span>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowSettings { get; set; }
    [Parameter] public string SystemMessage { get; set; } = "You are a helpful assistant.";
    [Parameter] public int? MaxTokens { get; set; }
    [Parameter] public string DefaultModel { get; set; } = string.Empty;
    [Parameter] public string? SaveStatus { get; set; }
    [Parameter] public string? ConnectionStatus { get; set; }
    [Parameter] public bool ConnectionOk { get; set; }
    [Parameter] public EventCallback OnCloseSettings { get; set; }
    [Parameter] public EventCallback OnSystemMessageChanged { get; set; }
    [Parameter] public EventCallback OnModelSettingsChanged { get; set; }
    [Parameter] public EventCallback OnSaveDefaults { get; set; }
    [Parameter] public EventCallback OnTestConnection { get; set; }
    [Parameter] public EventCallback OnTestIndexedDB { get; set; }
    [Parameter] public EventCallback OnClearIndexedDB { get; set; }
}