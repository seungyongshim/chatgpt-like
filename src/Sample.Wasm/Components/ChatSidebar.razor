@using Microsoft.Extensions.AI

<!-- 모바일 헤더 (햄버거 메뉴) -->
<div class="mobile-header d-lg-none">
    <button class="btn btn-outline-secondary mobile-menu-btn" @onclick="OnToggleMobileHistory">
        <i class="oi oi-menu"></i>
    </button>
    <span class="mobile-title">ChatGPT-like</span>
    <button class="btn btn-outline-primary btn-sm" @onclick="OnNewChat">+ 새 대화</button>
</div>

<!-- 모바일 오버레이 -->
@if (ShowMobileHistory)
{
    <div class="mobile-overlay show" @onclick="OnCloseMobileHistory"></div>
}

<aside class="history @(ShowMobileHistory ? "mobile-open" : "")">
    <div class="history-header">
        <span>대화</span>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-primary btn-sm" @onclick="OnNewChat">+ 새 대화</button>
            <button class="btn btn-outline-secondary btn-sm d-lg-none" @onclick="OnCloseMobileHistory">
                <i class="oi oi-x"></i>
            </button>
        </div>
    </div>
    <ul>
        @foreach (var s in Sessions)
        {
            <li class="@(s.Id == CurrentSessionId ? "active" : null)">
                <div class="session-item" @onclick="() => OnSwitchSession.InvokeAsync(s.Id)">
                    <span class="session-title">@s.Title</span>
                </div>
                @if (Sessions.Count > 1) // 최소 1개는 남겨둠
                {
                    <button class="delete-btn" @onclick="() => OnDeleteSession.InvokeAsync(s.Id)" @onclick:stopPropagation="true" title="대화 삭제">
                        <i class="oi oi-trash"></i>
                    </button>
                }
            </li>
        }
    </ul>
</aside>

@code {
    [Parameter] public List<Session> Sessions { get; set; } = new();
    [Parameter] public Guid CurrentSessionId { get; set; }
    [Parameter] public bool ShowMobileHistory { get; set; }
    [Parameter] public EventCallback OnNewChat { get; set; }
    [Parameter] public EventCallback<Guid> OnSwitchSession { get; set; }
    [Parameter] public EventCallback<Guid> OnDeleteSession { get; set; }
    [Parameter] public EventCallback OnToggleMobileHistory { get; set; }
    [Parameter] public EventCallback OnCloseMobileHistory { get; set; }
}