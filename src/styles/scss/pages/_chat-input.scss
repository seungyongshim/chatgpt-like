// ==========================================================================
// Chat Input Component - Actual HTML class structure styles
// ==========================================================================
@use "../abstracts" as *;

// Main chat input container (fixed at bottom)
// 콘텐츠 컬럼 가로폭을 그대로 채우도록 sticky 하단 고정
.chat-input-container {
    position: sticky;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: $zindex-fixed;
    background-color: var(--bg-primary);
    padding: spacing(4);
    // Use elevation on container via pseudo wrapper (inset upward shadow)
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);

    // 부모가 overflow: hidden인 경우 sticky가 작동하므로
    // 상위 `.chat-content`에는 overflow: hidden 유지하되, 스크롤 컨테이너는 `.message-list`로 한정

    @include media-breakpoint-down(md) {
        left: 0;
        padding: spacing(3);
    }
}

// Chat input wrapper
.chat-input-wrapper {
    max-width: 100%;
    width: 100%;
}

// Input controls section
.input-controls {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: spacing(3);
    margin-bottom: spacing(3);
    flex-wrap: nowrap;

    @include media-breakpoint-down(md) {
        gap: spacing(2);
        margin-bottom: spacing(2);
    }

    @include media-breakpoint-down(sm) {
        gap: spacing(2);
        margin-bottom: spacing(2);
        padding: spacing(2);
        background-color: var(--bg-secondary);
        border-radius: $border-radius;
        border: 1px solid var(--border-color);
        flex-wrap: wrap;
        justify-content: space-around;
    }
}

// Model selection dropdown
%model-control-shared {
    // Include mixin first, then wrap base declarations to opt into new behavior
    @include form-control-style;

    & {
        flex: 1;
        min-width: 150px;
        max-width: 200px;
        font-size: 0.875rem;
        padding: spacing(2) spacing(3);
    }

    @include media-breakpoint-down(md) {
        min-width: 120px;
        font-size: 0.8rem;
    }

    @include media-breakpoint-down(sm) {
        flex: 1;
        min-width: auto;
        max-width: none;
        font-size: 0.8rem;
        padding: spacing(2);
        background-color: var(--bg-primary);
        border: 1px solid var(--border-color);
        border-radius: $border-radius-sm;
    }
}

.model-select {
    @extend %model-control-shared;

    option {
        background-color: var(--bg-primary);
        color: var(--text-primary);

        @include media-breakpoint-down(sm) {
            padding: spacing(1);
        }
    }
}

// Model input for manual entry
.model-input {
    @extend %model-control-shared;
}

// Effective model display
.effective-model {
    font-size: 0.75rem;
    color: var(--text-muted);
    font-style: italic;
    margin-left: spacing(2);
}

// Temperature control
.temperature-range {
    @include form-control-style;

    & {
        flex: 0 0 120px;
        min-width: 120px;
        height: 6px;
        background: linear-gradient(90deg,
                color(info) 0%,
                color(success) 25%,
                color(warning) 50%,
                color(danger) 75%,
                color(primary) 100%);
        border-radius: 3px;
        border: none;
        padding: 0;
    }

    @include media-breakpoint-down(md) {
        flex: 0 0 100px;
        min-width: 100px;
        height: 5px;
    }

    @include media-breakpoint-down(sm) {
        flex: 0 0 80px;
        min-width: 80px;
        height: 8px;
        margin: 0;
    }

    &::-webkit-slider-thumb {
        appearance: none;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: white;
        border: 2px solid var(--btn-primary-bg);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        cursor: pointer;
        transition: $transition-base;

        @include media-breakpoint-down(sm) {
            width: 20px;
            height: 20px;
            border-width: 3px;
        }

        &:hover {
            // No scale on hover
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
    }

    &::-moz-range-thumb {
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: white;
        border: 2px solid var(--btn-primary-bg);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        cursor: pointer;
        border: none;

        @include media-breakpoint-down(sm) {
            width: 20px;
            height: 20px;
            border-width: 3px;
        }
    }
}

.temperature-value {
    flex: 0 0 auto;
    font-size: 0.875rem;
    font-weight: $font-weight-bold;
    background: linear-gradient(135deg, var(--btn-primary-bg), color(info));
    color: white;
    padding: spacing(1) spacing(2);
    border-radius: $border-radius;
    min-width: 2.5rem;
    text-align: center;
    @include elevation(sm);

    @include media-breakpoint-down(sm) {
        font-size: 0.8rem;
        padding: spacing(1);
        min-width: 2rem;
        border-radius: $border-radius-pill;
        margin: 0;
    }
}

// Usage information display - 이제 버튼 내부에서만 사용
.usage-info {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 auto;

    .usage-text {
        font-size: 0.875rem;
        color: var(--text-secondary);
        font-weight: $font-weight-bold;
        white-space: nowrap;
        padding: spacing(1) spacing(2);
        background-color: var(--bg-secondary);
        border-radius: $border-radius;
        border: 1px solid var(--border-color);

        @include media-breakpoint-down(sm) {
            font-size: 0.8rem;
            padding: spacing(1);
        }
    }
}

// Main input area
.input-area {
    display: flex;
    gap: spacing(3);
    align-items: flex-end;

    @include media-breakpoint-down(md) {
        gap: spacing(2);
        margin-top: spacing(2);
    }

    @include media-breakpoint-down(sm) {
        gap: spacing(2);
        margin-top: spacing(3);
    }
}

// Textarea container with resize handle
.textarea-container {
    position: relative;
    flex: 1;
    display: flex;
    flex-direction: column;
}

// Text input field
.message-input {
    @include form-control-style;

    & {
        flex: 1;
        min-height: 60px;
        max-height: 400px;
        resize: none;
        line-height: 1.5;
        font-family: $font-family-base;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    @include media-breakpoint-down(sm) {
        min-height: 50px;
    }

    &:disabled {
        opacity: 0.6;
        background-color: var(--bg-secondary);
    }

    &::placeholder {
        color: var(--text-muted);
        font-style: italic;
    }

    &:focus {
        border-bottom-color: var(--btn-primary-bg);
    }
}

// Resize handle
.resize-handle {
    position: relative;
    height: 12px;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-top: none;
    border-radius: 0 0 $border-radius $border-radius;
    cursor: ns-resize;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    user-select: none;

    &:hover {
        background-color: var(--bg-tertiary);
        border-color: var(--btn-primary-bg);
    }

    &.resizing {
        background-color: var(--btn-primary-bg);
        border-color: var(--btn-primary-bg);

        .resize-indicator span {
            background-color: white;
        }
    }

    .resize-indicator {
        display: flex;
        flex-direction: column;
        gap: 1px;

        span {
            width: 20px;
            height: 1px;
            background-color: var(--text-muted);
            border-radius: 1px;
            transition: background-color 0.2s ease;
        }
    }

    @include media-breakpoint-down(sm) {
        height: 14px;

        .resize-indicator span {
            width: 16px;
            height: 1.5px;
        }
    }
}

// Send button
.send-btn {
    background-color: var(--btn-primary-bg);
    color: white;
    border: 1px solid var(--btn-primary-border);
    min-height: 60px;
    min-width: 100px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: $border-radius;
    cursor: pointer;
    transition: $transition-base;
    padding: spacing(2);

    @include media-breakpoint-down(sm) {
        min-height: 50px;
        min-width: 80px;
        padding: spacing(1);
    }

    &:hover:not(:disabled) {
        filter: brightness(0.9);
        // No translate/scale on hover for mobile-first
        @include elevation(md);
    }

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    &.sending {
        background-color: var(--error-color);

        &:hover {
            background-color: var(--error-color);
            filter: brightness(0.9);
        }
    }

    .send-btn-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: spacing(1);
        width: 100%;
    }

    i {
        font-size: 1.2rem;

        @include media-breakpoint-down(sm) {
            font-size: 1rem;
        }
    }

    // 버튼 내부의 사용량 정보 스타일
    .usage-info {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
        padding: 0;
        background: transparent;
        border: none;
        order: 2;
        width: 100%;

        .usage-text {
            font-size: 0.65rem;
            color: rgba(255, 255, 255, 0.9);
            font-weight: $font-weight-bold;
            white-space: nowrap;
            padding: 0;
            background: transparent;
            border: none;
            margin: 0;

            @include media-breakpoint-down(sm) {
                font-size: 0.6rem;
            }
        }
    }
}

// Error message display
.chat-input-error {
    background-color: var(--error-ui-bg);
    color: var(--error-color);
    border: 1px solid var(--error-color);
    border-radius: $border-radius;
    padding: spacing(2) spacing(3);
    margin-bottom: spacing(3);
    @include flex-center;
    gap: spacing(2);
    font-size: 0.875rem;
}

// Dark theme specific adjustments
[data-theme="dark"] {
    .chat-input-container {
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.4);
    }

    .temperature-range {
        &::-webkit-slider-thumb {
            background: var(--bg-primary);
            border-color: var(--btn-primary-bg);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
        }

        &::-moz-range-thumb {
            background: var(--bg-primary);
            border-color: var(--btn-primary-bg);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
        }
    }

    .temperature-value {
        background: linear-gradient(135deg, var(--btn-primary-bg), color(info));
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
    }

    .model-select {
        option {
            background-color: var(--bg-secondary);
            color: var(--text-primary);
        }
    }
}

// Animations: use global `@keyframes spin` defined in abstracts/_mixins.scss